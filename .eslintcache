[{"E:\\All Language Projects\\React\\LearningProjects\\TodoDarkMode\\src\\index.js":"1","E:\\All Language Projects\\React\\LearningProjects\\TodoDarkMode\\src\\App.js":"2","E:\\All Language Projects\\React\\LearningProjects\\TodoDarkMode\\src\\reportWebVitals.js":"3","G:\\PersonalProjects\\todo-app\\src\\index.js":"4","G:\\PersonalProjects\\todo-app\\src\\App.js":"5","G:\\PersonalProjects\\todo-app\\src\\reportWebVitals.js":"6","G:\\PersonalProjects\\todo-app\\src\\APi\\index.js":"7","G:\\PersonalProjects\\todo-app\\src\\APi\\Comment.js":"8","G:\\PersonalProjects\\todo-app\\src\\aws-exports.js":"9","G:\\PersonalProjects\\todo-app\\src\\Amplify\\AmplifyAuth.js":"10"},{"size":500,"mtime":1611485321622,"results":"11","hashOfConfig":"12"},{"size":2941,"mtime":1611554945282,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":676,"mtime":1630775509392,"results":"15","hashOfConfig":"16"},{"size":3966,"mtime":1630771432778,"results":"17","hashOfConfig":"16"},{"size":375,"mtime":1615570494276,"results":"18","hashOfConfig":"16"},{"size":296,"mtime":1630771413562,"results":"19","hashOfConfig":"16"},{"size":191,"mtime":1630296369785,"results":"20","hashOfConfig":"16"},{"size":822,"mtime":1630775595151,"results":"21","hashOfConfig":"16"},{"size":449,"mtime":1630775641216,"results":"22","hashOfConfig":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"vitrdu",{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"25"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1arozd3",{"filePath":"34","messages":"35","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"37"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\All Language Projects\\React\\LearningProjects\\TodoDarkMode\\src\\index.js",[],["49","50"],"E:\\All Language Projects\\React\\LearningProjects\\TodoDarkMode\\src\\App.js",["51"],"import React from 'react';\nimport './App.css';\n\nexport default function App() {\n  const [todos,setTodos] = React.useState(JSON.parse(localStorage.getItem('todos')) ?? []);\n  const [inputTodo,setInputTodo] = React.useState('');\n  function createNewTodo(){\n    if(inputTodo.trim() !== ''){\n      let todo = {\n        content: inputTodo,\n        date:new Date(),\n        tags:[],\n        complete: false,\n        selected: false\n      };\n      let newTodos = [todo,...todos]\n      setTodos(newTodos);\n      \n      localStorage.setItem('todos',JSON.stringify(newTodos));\n      console.log(todos);\n      setInputTodo('');\n    \n    }\n  }\n  function getSelectedTodoCount(){\n    return todos.filter(todo => todo.selected).length;\n  }\n  function selectAllTodos(event){\n    setTodos(todos.map(todo => {\n      todo.selected = event.target.checked;\n      return todo}\n      )\n    )\n  }\n  function selectTodo(event){\n    setTodos(todos.map((todo,index) => {\n      if(event.target.value == index) \n        todo.selected= event.target.checked; \n      return todo;}\n      )\n    )\n  }\n  function markComplete(){\n    let newTodos = todos.map((todo) => {\n      if(todo.selected) \n        if(todo.complete) \n          todo.complete = false; \n        else \n          todo.complete=true;\n      todo.selected = false;\n      return todo;});\n    setTodos(newTodos);\n    localStorage.setItem('todos',JSON.stringify(newTodos));\n    document.querySelector('#select-all-checkbox').checked = false;\n  }\n  function deleteTodo(){\n    let newTodos = todos.filter((todo) => !todo.selected);\n    setTodos(newTodos);\n    localStorage.setItem('todos',JSON.stringify(newTodos));\n    document.querySelector('#select-all-checkbox').checked = false;\n  }\n  return (\n    <>\n    <h1>Todo App</h1>\n    <div className=\"sticky\">\n      <div className=\"input-container\">\n        <input type=\"text\" value={inputTodo} placeholder=\"Type new todo . . .\" className=\"todo-input\" onChange={(event) => setInputTodo(event.target.value)}/>\n        <input type=\"button\" value=\"ADD TODO\" className=\"btn add-todo\" onClick={_ => createNewTodo()}/>\n      </div>\n      <div className=\"update-todo-container\">\n        <input type=\"checkbox\" onChange={selectAllTodos} id='select-all-checkbox'/>\n        <span>{getSelectedTodoCount()} Selected</span>\n        <input type='button' className='btn mark-complete' onClick={_ => markComplete()} value=\"Mark Complete\"/>\n        <input type='button' className='btn delete' onClick={_ => deleteTodo()} value=\"Delete\"/>\n      </div>\n      </div>\n      <div className='todos-container'>\n        {todos.map((todo,index)=>\n        <div className=\"todo-container\" key={index}>\n          <input type=\"checkbox\" checked={todo.selected} value={index} onChange={selectTodo}/>\n          <p className={todo.complete?'complete':''}>{todo.content}<br/><span className=\"todo-date\">{new Date(todo.date).toLocaleDateString()}</span></p>\n        </div>)}\n      </div>\n    </>\n    );\n}","E:\\All Language Projects\\React\\LearningProjects\\TodoDarkMode\\src\\reportWebVitals.js",[],["52","53"],"G:\\PersonalProjects\\todo-app\\src\\index.js",["54"],"G:\\PersonalProjects\\todo-app\\src\\App.js",["55","56","57","58","59","60","61"],"import React from 'react';\r\nimport ApiExample from './APi';\r\nimport './App.css';\r\nimport axios from 'axios';\r\nexport default function App() {\r\n  const [todos, setTodos] = React.useState(\r\n    JSON.parse(localStorage.getItem('todos')) ?? []\r\n  );\r\n  const [data, setData] = React.useState([]);\r\n  React.useEffect(() => {\r\n    (async () => {\r\n      const tempData = await axios.get(\r\n        'https://my-json-server.typicode.com/typicode/demo/comments'\r\n      );\r\n      setData(tempData.data);\r\n    })();\r\n  }, []);\r\n  const [inputTodo, setInputTodo] = React.useState('');\r\n  function createNewTodo() {\r\n    if (inputTodo.trim() !== '') {\r\n      let todo = {\r\n        content: inputTodo,\r\n        date: new Date(),\r\n        tags: [],\r\n        complete: false,\r\n        selected: false,\r\n      };\r\n      let newTodos = [todo, ...todos];\r\n      setTodos(newTodos);\r\n\r\n      localStorage.setItem('todos', JSON.stringify(newTodos));\r\n      console.log(todos);\r\n      setInputTodo('');\r\n    }\r\n  }\r\n  function getSelectedTodoCount() {\r\n    return todos.filter((todo) => todo.selected).length;\r\n  }\r\n  function selectAllTodos(event) {\r\n    setTodos(\r\n      todos.map((todo) => {\r\n        todo.selected = event.target.checked;\r\n        return todo;\r\n      })\r\n    );\r\n  }\r\n  function selectTodo(event) {\r\n    setTodos(\r\n      todos.map((todo, index) => {\r\n        if (event.target.value == index) todo.selected = event.target.checked;\r\n        return todo;\r\n      })\r\n    );\r\n  }\r\n  function markComplete() {\r\n    let newTodos = todos.map((todo) => {\r\n      if (todo.selected)\r\n        if (todo.complete) todo.complete = false;\r\n        else todo.complete = true;\r\n      todo.selected = false;\r\n      return todo;\r\n    });\r\n    setTodos(newTodos);\r\n    localStorage.setItem('todos', JSON.stringify(newTodos));\r\n    document.querySelector('#select-all-checkbox').checked = false;\r\n  }\r\n  function deleteTodo() {\r\n    let newTodos = todos.filter((todo) => !todo.selected);\r\n    setTodos(newTodos);\r\n    localStorage.setItem('todos', JSON.stringify(newTodos));\r\n    document.querySelector('#select-all-checkbox').checked = false;\r\n  }\r\n  return (\r\n    <>\r\n      <ApiExample data={data} />\r\n      {/* <h1>Todo App</h1>\r\n      <div className=\"sticky\">\r\n        <div className=\"input-container\">\r\n          <input\r\n            type=\"text\"\r\n            value={inputTodo}\r\n            placeholder=\"Type new todo . . .\"\r\n            className=\"todo-input\"\r\n            onChange={(event) => setInputTodo(event.target.value)}\r\n          />\r\n          <input\r\n            type=\"button\"\r\n            value=\"ADD TODO\"\r\n            className=\"btn add-todo\"\r\n            onClick={(_) => createNewTodo()}\r\n          />\r\n        </div>\r\n        <div className=\"update-todo-container\">\r\n          <input\r\n            type=\"checkbox\"\r\n            onChange={selectAllTodos}\r\n            id=\"select-all-checkbox\"\r\n          />\r\n          <span>{getSelectedTodoCount()} Selected</span>\r\n          <input\r\n            type=\"button\"\r\n            className=\"btn mark-complete\"\r\n            onClick={(_) => markComplete()}\r\n            value=\"Mark Complete\"\r\n          />\r\n          <input\r\n            type=\"button\"\r\n            className=\"btn delete\"\r\n            onClick={(_) => deleteTodo()}\r\n            value=\"Delete\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"todos-container\">\r\n        {todos.map((todo, index) => (\r\n          <div className=\"todo-container\" key={index}>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={todo.selected}\r\n              value={index}\r\n              onChange={selectTodo}\r\n            />\r\n            <p className={todo.complete ? 'complete' : ''}>\r\n              {todo.content}\r\n              <br />\r\n              <span className=\"todo-date\">\r\n                {new Date(todo.date).toLocaleDateString()}\r\n              </span>\r\n            </p>\r\n          </div>\r\n        ))}\r\n      </div> */}\r\n    </>\r\n  );\r\n}\r\n",["62","63"],"G:\\PersonalProjects\\todo-app\\src\\reportWebVitals.js",[],"G:\\PersonalProjects\\todo-app\\src\\APi\\index.js",["64"],"import axios from 'axios';\r\nimport React from 'react';\r\nimport CustomComment from './Comment';\r\n\r\nexport default function ApiExample({ data }) {\r\n  return (\r\n    <div>\r\n      {data.map((comment) => (\r\n        <CustomComment data={comment.body} id={comment.id} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","G:\\PersonalProjects\\todo-app\\src\\APi\\Comment.js",[],"G:\\PersonalProjects\\todo-app\\src\\aws-exports.js",[],"G:\\PersonalProjects\\todo-app\\src\\Amplify\\AmplifyAuth.js",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":37,"column":29,"nodeType":"71","messageId":"72","endLine":37,"endColumn":31},{"ruleId":"65","replacedBy":"73"},{"ruleId":"67","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":4,"column":8,"nodeType":"77","messageId":"78","endLine":4,"endColumn":11},{"ruleId":"75","severity":1,"message":"79","line":19,"column":12,"nodeType":"77","messageId":"78","endLine":19,"endColumn":25},{"ruleId":"75","severity":1,"message":"80","line":36,"column":12,"nodeType":"77","messageId":"78","endLine":36,"endColumn":32},{"ruleId":"75","severity":1,"message":"81","line":39,"column":12,"nodeType":"77","messageId":"78","endLine":39,"endColumn":26},{"ruleId":"75","severity":1,"message":"82","line":47,"column":12,"nodeType":"77","messageId":"78","endLine":47,"endColumn":22},{"ruleId":"69","severity":1,"message":"70","line":50,"column":32,"nodeType":"71","messageId":"72","endLine":50,"endColumn":34},{"ruleId":"75","severity":1,"message":"83","line":55,"column":12,"nodeType":"77","messageId":"78","endLine":55,"endColumn":24},{"ruleId":"75","severity":1,"message":"84","line":67,"column":12,"nodeType":"77","messageId":"78","endLine":67,"endColumn":22},{"ruleId":"65","replacedBy":"85"},{"ruleId":"67","replacedBy":"86"},{"ruleId":"75","severity":1,"message":"87","line":1,"column":8,"nodeType":"77","messageId":"78","endLine":1,"endColumn":13},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["88"],["89"],"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","'createNewTodo' is defined but never used.","'getSelectedTodoCount' is defined but never used.","'selectAllTodos' is defined but never used.","'selectTodo' is defined but never used.","'markComplete' is defined but never used.","'deleteTodo' is defined but never used.",["88"],["89"],"'axios' is defined but never used.","no-global-assign","no-unsafe-negation"]